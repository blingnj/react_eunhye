{"version":3,"sources":["redux/types.js","redux/reducer.js","redux/store.js","comp/Home.js","comp/ChangeMemo.js","comp/DeleteMemo.js","comp/List.js","comp/Memo.js","comp/Graph.js","comp/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["saveMemo","addState","removeState","init","data","num","reducer","state","action","type","store","createStore","Home","useSelector","dispatch","useDispatch","confetti","document","querySelector","className","style","display","onClick","setTimeout","ChangeMemo","id","e","preventDefault","fetch","method","headers","body","JSON","stringify","title","info","DeleteMemo","List","useState","memoData","setMemoData","console","log","useEffect","then","res","json","map","v","src","alt","opacity","Memo","elInput","useRef","name","onSubmit","titValue","current","value","infoValue","placeholder","ref","el","rows","required","Graph","subject","coronaData","Corona","DATA","setData","tit","DESCRIPTION","push","height","keys","indexBy","margin","top","right","bottom","left","padding","valueScale","indexScale","round","valueFormat","format","enabled","colors","scheme","defs","background","color","size","stagger","rotation","lineWidth","spacing","fill","match","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","labelSkipWidth","labelSkipHeight","labelTextColor","legends","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","onChange","filter","day","target","k","border","getTit","getdata","scd_inc1","fir_inc1","scd_inc","s_vc_dt","fir_inc","fir_sub","fir_inc_rate","scd_inc_rate","NavBar","to","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7baaf82c.chunk.js","sourcesContent":["export const saveMemo = 'saveMemo'\r\nexport const addState = 'addState';\r\nexport const removeState = 'removeState';","import { saveMemo, addState, removeState } from './types'\r\n\r\nconst init ={data:true, num:100}\r\nfunction reducer(state = init, action){\r\n    switch(action.type){\r\n        case saveMemo : return {...state, data:!state.data };\r\n        case addState : return {...state,  num:state.num +1};\r\n        case removeState : return {...state, num:state.num -1};\r\n        default : return state;\r\n    }\r\n}\r\nexport default reducer;","import reducer from \"./reducer\";\r\nimport { createStore } from \"redux\"\r\n\r\nconst store = createStore(reducer)\r\n\r\nexport default store;","import { useSelector, useDispatch } from 'react-redux'\r\nimport { addState, removeState } from \"../redux/types\";\r\nimport Confetti from 'react-confetti'\r\n\r\n\r\nexport default function Home(){\r\n  const {num} = useSelector( (state)=>state );\r\n  const dispatch = useDispatch();\r\n\r\n  const confetti = document.querySelector('.confetti')\r\n\r\n  function goodClick(){\r\n      dispatch({type:addState})\r\n      confetti.style.display = \"block\"\r\n      setTimeout(()=> confetti.style.display = \"none\",3000)\r\n  }\r\n\r\n    return(\r\n      <div>\r\n            <Confetti className=\"confetti\" style={{display:\"none\"}}/>\r\n            <h2> 좋아요 {num}</h2>\r\n            <button onClick ={ goodClick }> 👍 </button>\r\n            <button onClick ={ ()=>dispatch({type:removeState}) }> - </button>\r\n      </div>\r\n    )\r\n} \r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nexport default function ChangeMemo( {id} ) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    function putMemo(e){\r\n        e.preventDefault()\r\n            fetch(`/memo/${id}`,{\r\n                method : \"PUT\",\r\n                headers : {\"Content-Type\":\"application/json\"},\r\n                body : JSON.stringify({title:\"수정\", info:\"불가합니다\"})\r\n            })\r\n        dispatch({type:'saveMemo'})\r\n    }\r\n    return (\r\n        <button onClick={putMemo}>\r\n            수정\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nexport default function DeleteMemo( {id} ) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    function delMemo(e){\r\n        e.preventDefault()\r\n            fetch(`/memo/${id}`,{\r\n                method : \"DELETE\",\r\n                headers : {\"Content-Type\":\"application/json\"},\r\n            })\r\n\r\n        dispatch({type:'saveMemo'})\r\n    }\r\n    return (\r\n        <button onClick={delMemo}>\r\n            삭제\r\n        </button>\r\n    )\r\n}\r\n","import React,{ useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport ChangeMemo from './ChangeMemo'\r\nimport DeleteMemo from './DeleteMemo'\r\n\r\n\r\nexport default function List() {\r\n\r\n    const [memoData, setMemoData] = useState()\r\n    const state = useSelector(state => state)\r\n\r\n    console.log(state)\r\n    useEffect(()=>{\r\n        fetch('/memo',{\r\n            method : \"GET\",\r\n            headers : {\"Content-type\":\"application/json\"},\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => setMemoData(data))\r\n    },[state])\r\n\r\n    return (\r\n        <div>\r\n            {memoData &&\r\n                <div>\r\n                    {\r\n                        memoData && memoData.map((v)=>(\r\n                            <div key={v.id}>\r\n                                <img src={`img/img${v.id}.png`} alt=\"\" style={{opacity:0.3}}/>\r\n                                <b>{v.title}</b>{v.info}\r\n                                <DeleteMemo id={v.id}/>\r\n                                <ChangeMemo id={v.id}/>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>   \r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React ,{ useRef } from 'react'\r\nimport List from './List'\r\nimport { useDispatch } from \"react-redux\"\r\nimport { saveMemo } from '../redux/types'\r\n\r\nexport default function Memo() {\r\n  const elInput = useRef([])\r\n  const dispatch = useDispatch()\r\n\r\n  function momoPost(e){\r\n      e.preventDefault();\r\n\r\n      let titValue = elInput.current[0].value\r\n      let infoValue = elInput.current[1].value\r\n\r\n      fetch('/memo',{\r\n          method : \"POST\",\r\n          headers : {\"content-type\":\"application/json\"},\r\n          body : JSON.stringify({title:titValue, info:infoValue})\r\n      })\r\n\r\n      dispatch({type:saveMemo})\r\n  }\r\n\r\n    return (\r\n        <>\r\n        <div>\r\n            <form name=\"memo\" onSubmit={momoPost}>\r\n                <p>\r\n                    <label>제목</label>\r\n                    <input type=\"text\" name=\"title\" placeholder=\"제목을적어주세요\"\r\n                    ref={(el)=>elInput.current[0]=el}></input>\r\n                </p>\r\n                <p>\r\n                    <label>내용</label>\r\n                    <textarea name=\"memo\" rows=\"5\" required\r\n                    ref={(el)=>elInput.current[1]=el}></textarea>\r\n                </p>\r\n                <p>\r\n                    <input type=\"submit\" value=\"저장\"/>\r\n                </p>\r\n            </form>\r\n        </div>\r\n        <List/>\r\n        </>\r\n    )\r\n}\r\n","import {useState} from \"react\";\r\nimport { ResponsiveBar } from '@nivo/bar'\r\n\r\nimport Corona from \"../db/corona19.json\";\r\n\r\n\r\nexport default function Graph(){\r\n    let subject = [];\r\n    let coronaData = Corona.DATA;\r\n    let [data,setData] = useState(Corona.DATA)\r\n    // console.log(Corona.DESCRIPTION); // object;\r\n    // console.log(Corona.DATA); // array;\r\n\r\n    for(let tit in Corona.DESCRIPTION){\r\n\r\n        // console.log(tit) //제목들이 출력\r\n        // console.log(Corona.DESCRIPTION[tit]) //제목에 따른 내용들이 출력됨\r\n\r\n        subject.push(Corona.DESCRIPTION[tit]);\r\n    }\r\n    // for(let i of coronaData){\r\n    //     console.log(Object.entries(i)[0][1])\r\n    // }\r\n    function dataChange(e){\r\n        // console.log( window.day.value);\r\n        // console.log( e.target.value);\r\n\r\n        setData(\r\n            coronaData.filter(day => (\r\n                day['s_vc_dt'] === e.target.value\r\n            ))\r\n        ); \r\n    }\r\n    function dataAll(){\r\n        setData(Corona.DATA)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style = {{height:'600px'}}>\r\n        <ResponsiveBar\r\n            data={data}\r\n            keys={[ 'fir_inc', 'scd_inc' ]}\r\n            indexBy=\"s_vc_dt\"\r\n            margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n            padding={0.3}\r\n            valueScale={{ type: 'linear' }}\r\n            indexScale={{ type: 'band', round: true }}\r\n            valueFormat={{ format: '', enabled: false }}\r\n            colors={{ scheme: 'nivo' }}\r\n            defs={[\r\n                {\r\n                    id: 'dots',\r\n                    type: 'patternDots',\r\n                    background: 'inherit',\r\n                    color: '#38bcb2',\r\n                    size: 4,\r\n                    padding: 1,\r\n                    stagger: true\r\n                },\r\n                {\r\n                    id: 'lines',\r\n                    type: 'patternLines',\r\n                    background: 'inherit',\r\n                    color: '#eed312',\r\n                    rotation: -45,\r\n                    lineWidth: 6,\r\n                    spacing: 10\r\n                }\r\n            ]}\r\n            fill={[\r\n                {\r\n                    match: {\r\n                        id: 'fries'\r\n                    },\r\n                    id: 'dots'\r\n                },\r\n                {\r\n                    match: {\r\n                        id: 'sandwich'\r\n                    },\r\n                    id: 'lines'\r\n                }\r\n            ]}\r\n            borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n            axisTop={null}\r\n            axisRight={null}\r\n            axisBottom={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legend: '날짜별 현황',\r\n                legendPosition: 'middle',\r\n                legendOffset: 32\r\n            }}\r\n            axisLeft={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legend: '코로나 접종률',\r\n                legendPosition: 'middle',\r\n                legendOffset: -40\r\n            }}\r\n            labelSkipWidth={12}\r\n            labelSkipHeight={12}\r\n            labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n            legends={[\r\n                {\r\n                    dataFrom: 'keys',\r\n                    anchor: 'bottom-right',\r\n                    direction: 'column',\r\n                    justify: false,\r\n                    translateX: 120,\r\n                    translateY: 0,\r\n                    itemsSpacing: 2,\r\n                    itemWidth: 100,\r\n                    itemHeight: 20,\r\n                    itemDirection: 'left-to-right',\r\n                    itemOpacity: 0.85,\r\n                    symbolSize: 20,\r\n                    effects: [\r\n                        {\r\n                            on: 'hover',\r\n                            style: {\r\n                                itemOpacity: 1\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]}\r\n        />\r\n            </div>\r\n            <section>\r\n                <h2> 코로나 백신 접종자 현황</h2>\r\n                <div>\r\n                    <select id=\"day\" onChange={dataChange}>\r\n                        {\r\n                            coronaData.map(function(data,k){\r\n                                return(\r\n                                    <option key={k}>{data['s_vc_dt']}</option>\r\n                                )\r\n                            })\r\n                        }\r\n                    </select>\r\n                    <button onClick={dataAll}>전체보기</button>\r\n                </div>\r\n\r\n                <table border=\"1\">\r\n                    <thead>\r\n                        <tr>\r\n                            {\r\n                                subject.map(function(getTit,k){\r\n                                    return (<th key={k}>{getTit}</th>)\r\n                                })\r\n                            }\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            data.map(function(getdata,k){\r\n                                return (\r\n                                <tr key={k}>\r\n                                    {/* <td>{data['scd_inc1']}</td> */}\r\n                                    <td>{getdata.scd_inc1}</td>\r\n                                    <td>{getdata.fir_inc1}</td>\r\n                                    <td>{getdata.scd_inc}</td>\r\n                                    <td>{getdata.s_vc_dt}</td>\r\n                                    <td>{getdata.fir_inc}</td>\r\n                                    <td>{getdata.fir_sub}</td>\r\n                                    <td>{getdata.fir_inc_rate}</td>\r\n                                    <td>{getdata.scd_inc_rate}</td>\r\n                                    {}\r\n                                </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </section>\r\n        </>\r\n    )\r\n}","import { Link } from \"react-router-dom\"\r\nimport React from 'react'\r\n\r\nexport default function NavBar() {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to= \"/\">Home</Link>\r\n            </div>\r\n            <div>\r\n                <Link to= \"/Memo\">MEMO 페이지</Link>\r\n                <Link to= \"/Graph\"> 코로나 Graph </Link>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import './App.css';\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\"\nimport store from './redux/store';\n\nimport Home from './comp/Home';\nimport Memo from './comp/Memo';\nimport Graph from './comp/Graph';\nimport NavBar from './comp/NavBar';\n\n\nfunction App() {\n  return (\n    <Provider store={store} basename=\"react_eunhye\">\n      <HashRouter>\n          <NavBar/>\n        <Switch>\n          <Route exact path=\"/\"><Home/></Route>\n          <Route path=\"/Memo\"><Memo/></Route>\n          <Route path=\"/Graph\"><Graph/></Route>\n        </Switch>\n      </HashRouter>\n    </Provider>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}